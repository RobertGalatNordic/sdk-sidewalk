name: Build and run DUT tests
on:
  workflow_call:
    inputs:
      change_nrf_revision:
        description: 'change revision of nrf in west.yml to `main`'
        required: false
        type: boolean
        default: false
      subset:
        description: ""
        required: true
        type: number
      max_subsets:
        description: ""
        type: number
        required: true
      target_board:
        description: "target board for tests"
        type: string
        required: true
      run_tests:
        description: ""
        required: false
        type: boolean
        default: true

jobs:
  build_tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python dependencies
        run: |
          apt install -y sudo

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: build_tests-${{ inputs.subset }}

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r scripts/ci/requirements.txt

      - name: change_nrf_revision
        if: ${{ inputs.change_nrf_revision }}
        run: |
          python3 scripts/ci/replace_nrf_revision_in_west.py internal_west.yml

      - name: Reconfigure west
        run: |
          source /workdir/zephyr/zephyr-env.sh
          cp -r ../sdk-sidewalk /workdir/internal_sidewalk
          cd /workdir
          west config manifest.path internal_sidewalk && \
          west config manifest.file internal_west.yml && \
          west update --narrow -o=--depth=1 && \
          ln -s internal_sidewalk sidewalk

      - name: Build test artifacts
        run: |
          source /workdir/zephyr/zephyr-env.sh
          west twister --platform ${{inputs.target_board}} --testsuite-root /workdir/sidewalk/tests --filter runnable --shuffle-tests --shuffle-tests-seed 123 --inline-logs --overflow-as-errors -vvv --prep-artifacts-for-testing --package-artifacts PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2 --subset ${{ inputs.subset }}/${{ inputs.max_subsets }}

      - name: save build artifacts
        uses: actions/cache@v3
        with:
          path: PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2
          key: DUT_artifacts_${{inputs.target_board}}_${{ inputs.subset }}_${{ github.sha }}

  run_dut_ut:
    needs: [build_tests]
    if: ${{ fromJson(inputs.run_tests) }}
    continue-on-error: true
    runs-on: [self-hosted, linux, x64, "${{inputs.target_board}}"]
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2 --privileged
      volumes:
        - /dev:/dev
        - /run/udev:/run/udev
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: sidewalk

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r sidewalk/scripts/ci/requirements.txt

      - name: Get build artifacts
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2
          key: DUT_artifacts_${{inputs.target_board}}_${{ inputs.subset }}_${{ github.sha }}
          fail-on-cache-miss: true

      - name: Fail on missing artifacts
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Unwrap artifacts
        run: |
          tar -xf PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2
          mv sidewalk /workdir/

      - name: Run Tests
        run: |
          source /workdir/zephyr/zephyr-env.sh
          west twister --no-clean -vvv --inline-logs --test-only --hardware-map /__w/hardware_map.yaml --device-testing -T /workdir/sidewalk/tests --retry-failed 2 --west-flash="--recover,--erase"

      - name: rename_twister_xml_report
        run: |
          mv twister-out/twister.xml twister-out/${{inputs.target_board}}_${{ inputs.subset }}_twister.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-dut_result
          path: |
            twister-out/${{inputs.target_board}}_${{ inputs.subset }}_twister.xml
            twister-out/**/handler.log
            twister-out/**/device.log
