name: Build Sidewalk samples and tests
on:
  workflow_call:
    inputs:
      change_nrf_revision:
        description: 'change revision of nrf in west.yml to `main`'
        default: false
        required: false
        type: boolean

jobs:
  build_samples:
    strategy:
      matrix:
        subset: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    env:
      MAX_SUBSETS: 15
      RANDOM_SEED: 123

    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: change_nrf_revision
        if: ${{ inputs.change_nrf_revision }}
        run: |
          python3 -m pip install -r scripts/ci/requirements.txt
          python3 scripts/ci/replace_nrf_revision_in_west.py west.yml

      - name: Reconfigure west
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir
          west config manifest.path sidewalk
          west update --narrow -o=--depth=1

      - name: Twister build samples
        run: /workdir/zephyr/scripts/twister --shuffle-tests --shuffle-tests-seed ${{ env.RANDOM_SEED }} --testsuite-root /workdir/sidewalk/samples/ --inline-logs --show-footprint --footprint-from-buildlog -vvv --build-only --subset ${{ matrix.subset }}/${{ env.MAX_SUBSETS }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: sample-${{ matrix.subset }}_of_${{ env.MAX_SUBSETS }}
          path: |
            twister-out/**/CMakeFiles/rules.ninja
            twister-out/**/CMakeCache.txt
            twister-out/**/build.log
            twister-out/**/build.ninja
            twister-out/**/handler.log
            twister-out/**/zephyr/.config
            twister-out/**/zephyr/runners.yaml
            twister-out/**/zephyr/*.elf
            twister-out/**/zephyr/*.hex
            twister-out/**/zephyr/*.dts
            twister-out/**/zephyr/dfu_application.zip
            twister-out/**/testbinary
            twister-out/twister.json

  build_ut_x86:
    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: change_nrf_revision
        if: ${{ inputs.change_nrf_revision }}
        run: |
          python3 scripts/ci/replace_nrf_revision_in_west.py west.yml

      - name: Reconfigure west
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir
          west config manifest.path sidewalk
          west update --narrow -o=--depth=1

      - name: Build test artifacts for
        run: /workdir/zephyr/scripts/twister --platform native_posix --platform unit_testing --testsuite-root /workdir/sidewalk/tests/ --inline-logs -vvv --build-only

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-x86
          path: |
            twister-out/**/CMakeFiles/rules.ninja
            twister-out/**/CMakeCache.txt
            twister-out/**/build.log
            twister-out/**/build.ninja
            twister-out/**/handler.log
            twister-out/**/zephyr/.config
            twister-out/**/zephyr/runners.yaml
            twister-out/**/zephyr/*.elf
            twister-out/**/zephyr/*.hex
            twister-out/**/zephyr/*.dts
            twister-out/**/zephyr/dfu_application.zip
            twister-out/**/testbinary
            twister-out/twister.json

  build_manual_tests:
    strategy:
      matrix:
        subset: [1, 2, 3, 4, 5, 6, 7]
    env:
      MAX_SUBSETS: 7
      RANDOM_SEED: 123

    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: change_nrf_revision
        if: ${{ inputs.change_nrf_revision }}
        run: |
          python3 scripts/ci/replace_nrf_revision_in_west.py west.yml

      - name: Reconfigure west
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir
          west config manifest.path sidewalk
          west update --narrow -o=--depth=1

      - name: Build test artifacts for DUT
        run: /workdir/zephyr/scripts/twister --testsuite-root /workdir/sidewalk/tests/manual --inline-logs -vvv --build-only --shuffle-tests --shuffle-tests-seed ${{ env.RANDOM_SEED }} --subset ${{ matrix.subset }}/${{ env.MAX_SUBSETS }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-manual-${{ matrix.subset }}_of_${{ env.MAX_SUBSETS }}
          path: |
            twister-out/**/CMakeFiles/rules.ninja
            twister-out/**/CMakeCache.txt
            twister-out/**/build.log
            twister-out/**/build.ninja
            twister-out/**/handler.log
            twister-out/**/zephyr/.config
            twister-out/**/zephyr/runners.yaml
            twister-out/**/zephyr/*.elf
            twister-out/**/zephyr/*.hex
            twister-out/**/zephyr/*.dts
            twister-out/**/zephyr/dfu_application.zip
            twister-out/**/testbinary
            twister-out/twister.json

  build_dut_tests:
    strategy:
      matrix:
        subset: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    env:
      MAX_SUBSETS: 12
      RANDOM_SEED: 123

    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: change_nrf_revision
        if: ${{ inputs.change_nrf_revision }}
        run: |
          python3 scripts/ci/replace_nrf_revision_in_west.py west.yml

      - name: Reconfigure west
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir
          west config manifest.path sidewalk
          west update --narrow -o=--depth=1

      - name: Build test artifacts for
        run: /workdir/zephyr/scripts/twister --exclude-platform native_posix --exclude-platform unit_testing --shuffle-tests --shuffle-tests-seed ${{ env.RANDOM_SEED }} --testsuite-root /workdir/sidewalk/tests/ --inline-logs -vvv --build-only --filter runnable --subset ${{ matrix.subset }}/${{ env.MAX_SUBSETS }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-dut-${{ matrix.subset }}_of_${{ env.MAX_SUBSETS }}
          path: |
            twister-out/**/CMakeFiles/rules.ninja
            twister-out/**/CMakeCache.txt
            twister-out/**/build.log
            twister-out/**/build.ninja
            twister-out/**/handler.log
            twister-out/**/zephyr/.config
            twister-out/**/zephyr/runners.yaml
            twister-out/**/zephyr/*.elf
            twister-out/**/zephyr/*.hex
            twister-out/**/zephyr/*.dts
            twister-out/**/zephyr/dfu_application.zip
            twister-out/**/testbinary
            twister-out/twister.json

  combine_artifacts:
    runs-on: ubuntu-latest
    needs:
      - build_dut_tests
      - build_manual_tests
      - build_samples
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Combine twister outputs for samples
        run: |
          rm -rf twister-out
          mkdir twister-out
          shopt -s extglob
          cp -r artifacts/sample-*/!(twister.json) twister-out/
          python3 scripts/ci/combine_twister_reports.py $(ls artifacts/sample-*/twister.json) twister-out/twister.json
          tar -czvf twister-out.tar.xz twister-out

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: sample-*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sample-artifacts
          path:
            twister-out.tar.xz

      - name: Combine twister outputs for manual tests
        run: |
          rm -rf twister-out
          mkdir twister-out
          shopt -s extglob
          cp -r artifacts/tests-manual-*_of_*/!(twister.json) twister-out/
          python3 scripts/ci/combine_twister_reports.py $(ls artifacts/tests-manual-*_of_*/twister.json) twister-out/twister.json
          tar -czvf twister-out.tar.xz twister-out

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: tests-manual-*_of_*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tests-manual
          path:
            twister-out.tar.xz

      - name: Combine twister outputs for DUT
        run: |
          rm -rf twister-out
          mkdir twister-out
          shopt -s extglob
          cp -r artifacts/tests-dut-*_of_*/!(twister.json) twister-out/
          python3 scripts/ci/combine_twister_reports.py $(ls artifacts/tests-dut-*_of_*/twister.json) twister-out/twister.json
          tar -czvf twister-out.tar.xz twister-out

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: tests-dut-*_of_*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tests-dut-artifacts
          path:
            twister-out.tar.xz
