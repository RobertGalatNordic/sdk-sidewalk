name: on PR action
on:
  pull_request:
    branches:
      - main

jobs:
  validate_compliance:
    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Run Compliance Tests
        env:
          BASE_REF: ${{ github.base_ref }}
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir/sidewalk
          python3 scripts/ci/sid_compliance.py --annotate -m yamllint -m kconfigbasic -m devicetreebindings -m binaryfiles -m imagesize -m nits -m gitlint -m identity -c origin/${BASE_REF}..

  save_pr_number:
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number to file
        run: |
          echo "${{ github.event.number }}" > PR_number

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: PR_number
          path: |
            PR_number

  build_samples_and_tests:
    needs: validate_compliance
    uses: RobertGalatNordic/sdk-sidewalk/.github/workflows/common-build.yml@test_dut_runner


  run_tests_on_x86:
    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:main
      options: --cpus 2
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Reconfigure west
        run: |
          cp -r ../sdk-sidewalk /workdir/sidewalk
          cd /workdir
          west config manifest.path sidewalk
          west update --narrow -o=--depth=1

      - name: Run Tests
        run: |
          /workdir/zephyr/scripts/twister -vvv --inline-logs --platform native_posix --platform unit_testing -T /workdir/sidewalk/tests --retry-failed 2

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-x86_result
          path: |
            twister-out/twister.xml
            twister-out/**/handler.log
            twister-out/**/device.log

  run_tests_on_dut:
    needs: build_samples_and_tests
    runs-on: self-hosted
    steps:
      - name: Initial setup
        run: |
          echo "/home/sidewalk/.local/bin" >> $GITHUB_PATH
          echo "/usr/local/sbin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "/usr/sbin" >> $GITHUB_PATH
          echo "/usr/bin" >> $GITHUB_PATH
          echo "/sbin" >> $GITHUB_PATH
          echo "/bin" >> $GITHUB_PATH
          echo "/usr/share" >> $GITHUB_PATH
          echo "/snap/bin" >> $GITHUB_PATH
          rm -rf sidewalk artifacts twister-out* .west

      - uses: actions/checkout@v3
        with:
          path: sidewalk

      - name: Update nrf
        run: |
          west init -l sidewalk
          west update --narrow -o=--depth=1
          python3 -m pip install -r zephyr/scripts/requirements.txt

      - uses: actions/download-artifact@v3
        with:
          name: tests-dut-artifacts
          path: artifacts

      - name: Run Tests
        run: |
          ls -lah artifacts
          cd artifacts; tar -xvzf artifacts.tar.xz; cd ..;
          number_of_artifacts=`ls artifacts/artifacts | wc -l`
          for subset in $(seq 1 $number_of_artifacts)
          do
            numbers=`usbreset | grep J-Link | awk '{print $2}'`
            for number in $numbers; do sudo usbreset $number; done
            sleep 1
            for snr in `nrfjprog -i`; do nrfjprog --recover --snr $snr; done
            sleep 1
            tar -xjvf  artifacts/artifacts/tests-dut-${subset}_of_${number_of_artifacts}/PACKAGE_ARTIFACTS_${subset}
            zephyr/scripts/twister -vvv --inline-logs --test-only --hardware-map /hw_settings/hardware_map.yaml -T sidewalk/tests  --device-testing --west-flash="--recover,--erase" --load-tests twister-out/testplan.json
            mv twister-out twister-out.${subset}
            echo "completed running tests ${subset}/${number_of_artifacts}"
          done

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-DUT_result
          path: |
            twister-out.*/twister.xml
            twister-out.*/**/handler.log
            twister-out.*/**/device.log

      - name: Cleanup
        if: always()
        run: |
          rm -rf sidewalk artifacts twister-out* .west
